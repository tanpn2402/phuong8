{"version":3,"sources":["IdentityDialog.js","index.js"],"names":["URL","window","apiURL","IdentityDialog","props","state","open","data","loading","nextProps","this","fetchData","setState","fileid","fetch","method","headers","body","JSON","stringify","then","e","json","ok","idOpenLoading","classes","Dialog","onClose","paper","dialogPaper","DialogTitle","DialogContent","Typography","component","length","Grid","container","justify","item","map","Paper","className","imageContainer","clearImage","IconButton","onClick","onRemoveImage","src","value","alt","image","alignItems","Button","color","variant","onChooseFile","key","Date","getTime","type","id","onChange","onfileChange","style","display","d","filter","el","concat","document","getElementById","click","file","target","files","self","reader","FileReader","onload","base64","result","insertId","readAsDataURL","React","Component","withStyles","theme","minWidth","width","position","marginBottom","top","right","backgroundColor","getUrlParam","p","location","search","split","params","App","zoom","isOpenIdentityList","refs","opacity","print","searchParams","payload","isArray","replace","RegExp","str","photo","alert","Object","keys","err","ref","flex","onViewIdentity","onZoomIn","onZoomOut","onSave","onPrint","ReactDOM","render"],"mappings":"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","file":"static/js/main.33964f4a.chunk.js","sourcesContent":["import React from 'react';\nimport { Dialog, Button, Paper } from '@material-ui/core';\nimport { DialogTitle } from '@material-ui/core';\nimport { DialogContent } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Grid } from '@material-ui/core';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport { IconButton } from '@material-ui/core';\n\nconst URL = window.apiURL || 'http://127.0.0.1:33003';\n\nclass IdentityDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            data: [],\n            loading: true\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.open !== this.state.open) {\n            this.fetchData(nextProps.data);\n            this.setState({\n                open: nextProps.open,\n                data: []\n            })\n        }\n    }\n\n    fetchData({ fileid }) {\n        this.setState({ loading: true })\n        fetch(URL + '/api/identity/get', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json; charset=utf-8'\n            },\n            body: JSON.stringify({\n                fileid\n            })\n        })\n            .then(e => e.json())\n            .then(e => {\n                this.setState({ loading: false })\n\n                if (e.ok) {\n                    this.setState({\n                        data: e.data\n                    })\n                }\n            })\n    }\n\n    render() {\n        const { open, loading, data, idOpenLoading } = this.state;\n        const { classes } = this.props;\n\n\n        return <>\n            <Dialog open={open}\n                onClose={() => this.setState({ open: false })}\n                classes={{\n                    paper: classes.dialogPaper\n                }}\n            >\n                <DialogTitle>CMND</DialogTitle>\n                <DialogContent>\n                    {loading && <Typography component='small'>Đang tải...</Typography>}\n                    {!loading && data && data.length === 0 && <Typography component='small'>Không tìm thấy dữ liệu</Typography>}\n                    <Grid container justify='center'>\n                        <Grid item>\n                            {data && data.map(e => {\n                                return <Paper className={classes.imageContainer}>\n                                    <div className={classes.clearImage}>\n                                        <IconButton onClick={() => this.onRemoveImage(e)}>\n                                            <ClearIcon />\n                                        </IconButton>\n                                    </div>\n                                    <img src={e.value} alt={'adsa'} className={classes.image} />\n                                </Paper>\n                            })}\n                        </Grid>\n                    </Grid>\n                    <br />\n                    <br />\n                    <Grid container alignItems='center' justify='center'>\n                        <Grid item>\n                            <Button color='primary' variant='contained' onClick={() => this.onChooseFile()}>Thêm mới</Button>\n                            <input key={new Date().getTime()} type='file' id=\"getFile\" onChange={e => this.onfileChange(e)} style={{ display: 'none' }}></input>\n                        </Grid>\n                    </Grid>\n                </DialogContent>\n            </Dialog>\n\n            <Dialog open={idOpenLoading}>\n                <DialogContent>\n                    <Typography component='small'>Đang tải...</Typography>\n                </DialogContent>\n            </Dialog>\n        </>\n    }\n\n    onRemoveImage(data) {\n        fetch(URL + '/api/identity/delete', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json; charset=utf-8'\n            },\n            body: JSON.stringify({\n                id: data.id\n            })\n        })\n            .then(e => e.json())\n            .then(e => {\n                if (e.ok) {\n                    let d = this.state.data.filter(el => el.id !== data.id);\n\n                    this.setState({\n                        data: [].concat(d)\n                    })\n                }\n            })\n    }\n\n    onChooseFile() {\n        document.getElementById('getFile').click();\n    }\n\n    onfileChange(e) {\n        const { data } = this.props;\n        let file = e.target.files[0];\n        let self = this;\n\n        if (file) {\n            self.setState({ idOpenLoading: true })\n            const reader = new FileReader();\n\n            reader.onload = function (e) {\n                let base64 = e.target.result;\n\n                fetch(URL + '/api/identity/insert', {\n                    method: 'POST',\n                    headers: {\n                        'Content-type': 'application/json; charset=utf-8'\n                    },\n                    body: JSON.stringify({\n                        fileid: data.fileid,\n                        value: base64\n                    })\n                })\n                    .then(e => e.json())\n                    .then(e => {\n                        self.setState({ idOpenLoading: false })\n                        if (e.ok) {\n                            self.setState({\n                                data: [].concat(self.state.data).concat({ id: e.insertId, value: base64 })\n                            })\n                        }\n                    })\n            }\n\n            reader.readAsDataURL(file);\n        }\n    }\n}\n\nconst styles = theme => ({\n    dialogPaper: {\n        minWidth: 800\n    },\n    image: {\n        width: '100%'\n    },\n    imageContainer: {\n        position: 'relative',\n        width: 600,\n        marginBottom: 10\n    },\n    clearImage: {\n        position: 'absolute',\n        top: 0,\n        right: 0,\n        backgroundColor: '#3f51b5'\n    }\n})\n\nexport default withStyles(styles)(IdentityDialog); ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { isArray } from 'util';\nimport IdentityDialog from './IdentityDialog';\n\nconst URL = window.apiURL || 'http://127.0.0.1:33003';\n\nfunction replaceAll(src, search, replacement) {\n    var target = src;\n    return target.replace(new RegExp(search, 'g'), replacement);\n};\n\nconst getUrlParam = () => {\n    let searchParams = window.location.search;\n    let p = searchParams.split('?');\n    let params = {};\n    p.map(e => {\n        if (e) {\n            params[e.split('=')[0]] = e.split('=')[1];\n        }\n    })\n\n    return params;\n}\n\nclass App extends React.Component {\n    state = {\n        zoom: 100,\n        isOpenIdentityList: false\n    }\n\n    onPrint() {\n        this.refs.container.style.opacity = '0';\n        window.print();\n        this.refs.container.style.opacity = '1';\n    }\n\n    onSave() {\n        const searchParams = getUrlParam();\n\n        let data = {};\n        if (window.payload && isArray(window.payload)) {\n            window.payload.map(e => {\n                data[e] = (document.getElementById(e).value || '').replace(new RegExp('\\n'), '|N|')\n            })\n        }\n\n        let str = JSON.stringify(data) + \"\";\n\n        fetch(URL + '/api/document/save', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json; charset=utf-8'\n            },\n            body: JSON.stringify({\n                id: searchParams.id,\n                data: str,\n                photo: (document.getElementById(\"image\") || {}.src) || \"\"\n            })\n        })\n            .then(e => e.json())\n            .then(e => {\n                if (e.ok === 1) {\n                    alert(\"Lưu thành công\");\n                }\n                else {\n                    alert(\"Lưu thất bại, vui lòng thử lại\");\n                }\n            })\n    }\n\n    componentDidMount() {\n        const searchParams = getUrlParam();\n\n        fetch(URL + '/api/document/get', {\n            method: 'POST',\n            headers: {\n                'Content-type': 'application/json; charset=utf-8'\n            },\n            body: JSON.stringify({\n                id: searchParams.id\n            })\n        })\n            .then(e => e.json())\n            .then(e => {\n                let data = e.data;\n                if (data) {\n                    Object.keys(data).map(key => {\n                        try {\n                            let d = (data[key] || '').replace(new RegExp('\\\\|N\\\\|'), '\\n');\n                            document.getElementById(key).value = d\n                        } catch (err) { }\n                    })\n                }\n\n                if (e.photo) {\n                    document.getElementById(\"image\").src = e.photo;\n                }\n            })\n    }\n\n    onfileChange(e) {\n        let file = e.target.files[0]\n\n        if (file) {\n            const reader = new FileReader();\n\n            reader.onload = function (e) {\n                let base64 = e.target.result;\n                document.getElementById(\"image\").src = base64;\n            }\n\n            reader.readAsDataURL(file);\n        }\n    }\n\n    onZoomIn() {\n        this.setState({\n            zoom: this.state.zoom + 20\n        }, () => {\n            document.getElementById(\"page-container\").style.zoom = this.state.zoom + '%';\n        })\n    }\n\n    onZoomOut() {\n        this.setState({\n            zoom: this.state.zoom - 20\n        }, () => {\n            document.getElementById(\"page-container\").style.zoom = this.state.zoom + '%';\n        })\n    }\n\n    onRemoveImage() {\n        document.getElementById(\"image\").src = null;\n    }\n\n    onViewIdentity() {\n        this.setState({ isOpenIdentityList: true })\n    }\n\n    render() {\n        const searchParams = getUrlParam();\n\n        return <div className='xxx__container' ref='container'>\n            <input type='file' onChange={e => this.onfileChange(e)} id=\"file\" className='custom-file-input' />\n            <button className='xxx-button' onClick={() => this.onRemoveImage()}>Xóa ảnh</button>\n            <div style={{ flex: 1 }}>\n\n            </div>\n            <button className='xxx-button' onClick={() => this.onViewIdentity()}>Xem CMND</button>\n            <button className='xxx-button' onClick={() => this.onZoomIn()}>Phóng to</button>\n            <button className='xxx-button' onClick={() => this.onZoomOut()}>Thu nhỏ</button>\n            <button className='xxx-button' onClick={() => this.onSave()}>Lưu</button>\n            <button className='xxx-button' onClick={() => this.onPrint()}>In</button>\n\n            <IdentityDialog\n                open={this.state.isOpenIdentityList}\n                data={{\n                    fileid: searchParams.id\n                }}\n            />\n        </div>\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('fucking'));"],"sourceRoot":""}